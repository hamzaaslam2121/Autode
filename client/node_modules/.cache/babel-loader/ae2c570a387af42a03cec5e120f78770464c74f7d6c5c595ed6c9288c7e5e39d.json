{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaaslam/VSCode/autode/client/src/components/Map.jsx\";\nimport React, { useMemo } from 'react';\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport GoogleMapReact from 'google-map-react';\nimport './map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  const defaultProps = {\n    center: {\n      lat: 51.4769,\n      lng: 0.0005\n    },\n    zoom: 11\n  };\n  const onLoad = map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    markers === null || markers === void 0 ? void 0 : markers.forEach(({\n      lat,\n      lng\n    }) => bounds.extend({\n      lat,\n      lng\n    }));\n    map.fitBounds(bounds);\n  };\n  const markers = [{\n    lat: 51.4769,\n    lng: 0.0005\n  }, {\n    lat: 51.4769,\n    lng: 0.0005\n  }, {\n    lat: 51.4769,\n    lng: 0.0005\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      center: center,\n      zoom: 5,\n      onLoad: onLoad,\n      children: markers.map(({\n        lat,\n        lng\n      }) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: 51.4769,\n          lng: 0.0005\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this) //latitude and longitude used here represent greenwich observatory as this is the prime meridian of global time\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useMemo","GoogleMap","Marker","useLoadScript","GoogleMapReact","jsxDEV","_jsxDEV","Map","defaultProps","center","lat","lng","zoom","onLoad","map","bounds","window","google","maps","LatLngBounds","markers","forEach","extend","fitBounds","className","children","isLoaded","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerClassName","position","_c","$RefreshReg$"],"sources":["/Users/hamzaaslam/VSCode/autode/client/src/components/Map.jsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport GoogleMapReact from 'google-map-react';\n\nimport './map.css'\n\nconst Map = () => {\n    \n\n    const defaultProps = {\n      center: {\n        lat: 51.4769,\n        lng: 0.0005\n      },\n      zoom: 11\n      }\n\n    const onLoad = (map) => {\n        const bounds = new window.google.maps.LatLngBounds();\n        markers?.forEach(({ lat, lng }) => bounds.extend({ lat, lng }));\n        map.fitBounds(bounds);\n      };\n    \n    const markers = [{ lat: 51.4769, lng: 0.0005 },\n                    { lat: 51.4769, lng: 0.0005 },\n                    { lat: 51.4769, lng: 0.0005 }];\n    \n\n     \n    return (\n      <div className=\"App\">\n      {!isLoaded ? (\n        <h1>Loading...</h1>\n      ) : (\n        <GoogleMap\n          mapContainerClassName=\"map-container\"\n          center={center}\n          zoom={5}\n          onLoad={onLoad}>\n        {markers.map(({ lat, lng }) => (\n        <Marker position={{ lat: 51.4769, lng: 0.0005 }} /> //latitude and longitude used here represent greenwich observatory as this is the prime meridian of global time\n        ))}\n      </GoogleMap>\n    )}\n    </div>\n  );\n  \n};\n  export default Map;\n\n  \n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,SAAS,EAAEC,MAAM,EAAEC,aAAa,QAAQ,wBAAwB;AACzE,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAGd,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE;IACP,CAAC;IACDC,IAAI,EAAE;EACN,CAAC;EAEH,MAAMC,MAAM,GAAIC,GAAG,IAAK;IACpB,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;IACpDC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,OAAO,CAAC,CAAC;MAAEX,GAAG;MAAEC;IAAI,CAAC,KAAKI,MAAM,CAACO,MAAM,CAAC;MAAEZ,GAAG;MAAEC;IAAI,CAAC,CAAC,CAAC;IAC/DG,GAAG,CAACS,SAAS,CAACR,MAAM,CAAC;EACvB,CAAC;EAEH,MAAMK,OAAO,GAAG,CAAC;IAAEV,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAO,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAO,CAAC,EAC7B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAO,CAAC,CAAC;EAI9C,oBACEL,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACnB,CAACC,QAAQ,gBACRpB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnBxB,OAAA,CAACL,SAAS;MACR8B,qBAAqB,EAAC,eAAe;MACrCtB,MAAM,EAAEA,MAAO;MACfG,IAAI,EAAE,CAAE;MACRC,MAAM,EAAEA,MAAO;MAAAY,QAAA,EAChBL,OAAO,CAACN,GAAG,CAAC,CAAC;QAAEJ,GAAG;QAAEC;MAAI,CAAC,kBAC1BL,OAAA,CAACJ,MAAM;QAAC8B,QAAQ,EAAE;UAAEtB,GAAG,EAAE,OAAO;UAAEC,GAAG,EAAE;QAAO;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC;MACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAGV,CAAC;AAACG,EAAA,GAzCI1B,GAAG;AA0CP,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}