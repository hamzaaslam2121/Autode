{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaaslam/VSCode/autode/client/src/components/SearchBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport googleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SearchBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onPlacesChanged = () => {\n      if (this.props.onPlacesChanged) {\n        this.props.onPlacesChanged(this.searchBox.getPlaces());\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: \"input\",\n      ...this.props,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBox = new google.maps.places.SearchBox(input);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n  componentWillUnmount() {\n    // https://developers.google.com/maps/documentation/javascript/events#removing\n    google.maps.event.clearInstanceListeners(this.searchBox);\n  }\n}\nSearchBox.propTypes = {\n  placeholder: React.PropTypes.string,\n  onPlacesChanged: React.PropTypes.func\n};","map":{"version":3,"names":["React","ReactDOM","googleMapReact","jsxDEV","_jsxDEV","SearchBox","Component","constructor","args","onPlacesChanged","props","searchBox","getPlaces","render","ref","type","fileName","_jsxFileName","lineNumber","columnNumber","componentDidMount","input","findDOMNode","refs","google","maps","places","addListener","componentWillUnmount","event","clearInstanceListeners","propTypes","placeholder","PropTypes","string","func"],"sources":["/Users/hamzaaslam/VSCode/autode/client/src/components/SearchBox.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport googleMapReact from 'google-map-react';\nexport default class SearchBox extends React.Component {\n  static propTypes = {\n    placeholder: React.PropTypes.string,\n    onPlacesChanged: React.PropTypes.func\n  }\n  render() {\n    return <input ref=\"input\" {...this.props} type=\"text\"/>;\n  }\n  onPlacesChanged = () => {\n    if (this.props.onPlacesChanged) {\n      this.props.onPlacesChanged(this.searchBox.getPlaces());\n    }\n  }\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBox = new google.maps.places.SearchBox(input);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n  componentWillUnmount() {\n    // https://developers.google.com/maps/documentation/javascript/events#removing\n    google.maps.event.clearInstanceListeners(this.searchBox);\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9C,eAAe,MAAMC,SAAS,SAASL,KAAK,CAACM,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAQrDC,eAAe,GAAG,MAAM;MACtB,IAAI,IAAI,CAACC,KAAK,CAACD,eAAe,EAAE;QAC9B,IAAI,CAACC,KAAK,CAACD,eAAe,CAAC,IAAI,CAACE,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;MACxD;IACF,CAAC;EAAA;EAPDC,MAAMA,CAAA,EAAG;IACP,oBAAOT,OAAA;MAAOU,GAAG,EAAC,OAAO;MAAA,GAAK,IAAI,CAACJ,KAAK;MAAEK,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACzD;EAMAC,iBAAiBA,CAAA,EAAG;IAClB,IAAIC,KAAK,GAAGpB,QAAQ,CAACqB,WAAW,CAAC,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC;IACjD,IAAI,CAACV,SAAS,GAAG,IAAIa,MAAM,CAACC,IAAI,CAACC,MAAM,CAACrB,SAAS,CAACgB,KAAK,CAAC;IACxD,IAAI,CAACV,SAAS,CAACgB,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAClB,eAAe,CAAC;EACpE;EACAmB,oBAAoBA,CAAA,EAAG;IACrB;IACAJ,MAAM,CAACC,IAAI,CAACI,KAAK,CAACC,sBAAsB,CAAC,IAAI,CAACnB,SAAS,CAAC;EAC1D;AACF;AAtBqBN,SAAS,CACrB0B,SAAS,GAAG;EACjBC,WAAW,EAAEhC,KAAK,CAACiC,SAAS,CAACC,MAAM;EACnCzB,eAAe,EAAET,KAAK,CAACiC,SAAS,CAACE;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}